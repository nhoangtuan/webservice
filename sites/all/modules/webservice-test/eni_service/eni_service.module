<?php

/**
 * Implementation of hook_menu().
 */
function eni_service_menu() {
  $items = array();

  $items['ws/compare/findtownbypostalcode'] = array(
    'title' => 'Eni Ws Get Town by Postal code.',
    'page callback' => 'ws_get_town_by_postalcode',
    'access callback' => TRUE,
  );

  $items['ws/price/getprice'] = array(
    'title' => 'Eni Ws Get Price.',
    'page callback' => 'ws_get_price',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * WS Get Town by Postal code.
 * Return Json Encode.
 */
function ws_get_town_by_postalcode() {
  $response = array();
  $param = drupal_get_query_parameters();
  if (isset($param['postalcode']) && $param['postalcode']) {
    $datas = db_select('eni_city', 'c')
    ->fields('c')
    ->condition('postal_code', $param['postalcode'])
    ->execute()
    ->fetchAll();

    if(!empty($datas)) {
      foreach ($datas as $key => $data) {
        $response['towns'][$key]['gas'] = $data->gaz_level != 0 ? true : false;
        $response['towns'][$key]['name'] = $data->city_name;
        $response['towns'][$key]['electricity'] = ($data->has_electricity == 1) ? true : false;
        $response['towns'][$key]['id'] = $data->insee_code;
      }
      $response['code'] = 1;
      $response['message'] = t('Get the postal code has success.');
    } else {
      $response['towns'] = array();
      $response['code'] = 0;
      $response['message'] = t('Get the postal code has not success.');
    }
  }

  drupal_json_output($response);
}

/**
 * WS get Price.
 * Return Json Encode.
 */
function ws_get_price(){
  $response = array();
  $param = drupal_get_query_parameters($_POST);  
  if (isset($param['energy']) && $param['energy']) {
    switch ($param['energy']) {
      case 'electricity':
        $datas = db_select('eni_price_electricity', 'e')
          ->fields('e',array('id_offer', 'eni_price_kwh_ht','eni_price_kwh_ttc', 'eni_subscription_ht',
            'eni_subscription_ttc', 'grd_price_kwh_ht', 'grd_price_kwh_ttc', 'grd_subscription_ht', 'grd_subscription_ttc'))
          ->condition('offer_type', array('dual', 'mono'),'IN')
          ->execute()
          ->fetchAll();
        if(!empty($datas)) {          
          foreach ($datas as $key => $data) {
            $response['offers']['electricity']['offer_' . $data->id_offer][] = array(
              'eni_price_kwh_ht' => $data->eni_price_kwh_ht,
              'eni_price_kwh_ttc' => $data->eni_price_kwh_ttc,
              'eni_subscription_ht' => $data->eni_subscription_ht,
              'eni_subscription_ttc' => $data->eni_subscription_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_subscription_ht' => $data->grd_subscription_ht,
              'grd_subscription_ttc' => $data->grd_subscription_ttc,
            );
          }
        }

        break;

      case 'gaz':
        $datas = db_select('eni_price_gaz', 'g')
          ->fields('g',array('id_offer', 'eni_price_kwh_ht','eni_price_kwh_ttc', 'eni_subscription_ht',
            'eni_subscription_ttc', 'grd_price_kwh_ht', 'grd_price_kwh_ttc', 'grd_subscription_ht', 'grd_subscription_ttc'))
          ->condition('offer_type', array('dual', 'mono'),'IN')
          ->execute()
          ->fetchAll();
        if(!empty($datas)) {
          foreach ($datas as $key => $data) {
            $response['offers']['gaz']['offer_' . $data->id_offer][] = array(
              'eni_price_kwh_ht' => $data->eni_price_kwh_ht,
              'eni_price_kwh_ttc' => $data->eni_price_kwh_ttc,
              'eni_subscription_ht' => $data->eni_subscription_ht,
              'eni_subscription_ttc' => $data->eni_subscription_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_subscription_ht' => $data->grd_subscription_ht,
              'grd_subscription_ttc' => $data->grd_subscription_ttc,
            );
          }
        }

        break;

      case'both':
      case 'dual':
        $datas_gaz = db_select('eni_price_gaz', 'g')
          ->fields('g',array('id_offer', 'eni_price_kwh_ht','eni_price_kwh_ttc', 'eni_subscription_ht',
            'eni_subscription_ttc', 'grd_price_kwh_ht', 'grd_price_kwh_ttc', 'grd_subscription_ht', 'grd_subscription_ttc'))
          ->execute()
          ->fetchAll();
        if(!empty($datas_gaz)) {
          foreach ($datas_gaz as $key => $data) {
            $response['offers']['gaz_dual']['offer_' . $data->id_offer][] = array(
              'eni_price_kwh_ht' => $data->eni_price_kwh_ht,
              'eni_price_kwh_ttc' => $data->eni_price_kwh_ttc,
              'eni_subscription_ht' => $data->eni_subscription_ht,
              'eni_subscription_ttc' => $data->eni_subscription_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_subscription_ht' => $data->grd_subscription_ht,
              'grd_subscription_ttc' => $data->grd_subscription_ttc,
            );
          }
        }

        $datas_electricity = db_select('eni_price_electricity', 'e')
          ->fields('e',array('id_offer', 'eni_price_kwh_ht','eni_price_kwh_ttc', 'eni_subscription_ht',
            'eni_subscription_ttc', 'grd_price_kwh_ht', 'grd_price_kwh_ttc', 'grd_subscription_ht', 'grd_subscription_ttc'))
          ->execute()
          ->fetchAll();
        if(!empty($datas_electricity)) {
          foreach ($datas_electricity as $key => $data) {
            $response['offers']['electricity_dual']['offer_' . $data->id_offer][] = array(
              'eni_price_kwh_ht' => $data->eni_price_kwh_ht,
              'eni_price_kwh_ttc' => $data->eni_price_kwh_ttc,
              'eni_subscription_ht' => $data->eni_subscription_ht,
              'eni_subscription_ttc' => $data->eni_subscription_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_price_kwh_ttc' => $data->grd_price_kwh_ttc,
              'grd_subscription_ht' => $data->grd_subscription_ht,
              'grd_subscription_ttc' => $data->grd_subscription_ttc,
            );
          }
        }
        
        break;

      default:
        break;
    }
  }

  drupal_json_output($response);
}
